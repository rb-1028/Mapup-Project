{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1DiGymidw1FaeSyEzu96N-kVFNTh2jXQX","timestamp":1702229714668}],"authorship_tag":"ABX9TyM/km/F8PqcfZdZHIghHmIU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"ECg5DoLiamvt","executionInfo":{"status":"ok","timestamp":1702223355264,"user_tz":-330,"elapsed":13,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"outputs":[],"source":["import pandas as pd\n","import datetime"]},{"cell_type":"code","source":["def calculate_distance_matrix(df):\n","    pivot_table = df.pivot_table(index='id_start', columns='id_end', values='distance', aggfunc='sum', fill_value=0)\n","    distance_matrix = pivot_table + pivot_table.T\n","    return distance_matrix"],"metadata":{"id":"-JKUmlZqavj0","executionInfo":{"status":"ok","timestamp":1702223392012,"user_tz":-330,"elapsed":546,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["def unroll_distance_matrix(distance_matrix):\n","    unrolled_df = distance_matrix.stack().reset_index()\n","    unrolled_df.columns = ['id_start', 'id_end', 'distance']\n","    unrolled_df = unrolled_df[unrolled_df['id_start'] != unrolled_df['id_end']]\n","    return unrolled_df"],"metadata":{"id":"avSvkxzKa6sf","executionInfo":{"status":"ok","timestamp":1702223410316,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def find_ids_within_ten_percentage_threshold(df, reference_id):\n","    avg_distance = df[df['id_start'] == reference_id]['distance'].mean()\n","    lower_bound = 0.9 * avg_distance\n","    upper_bound = 1.1 * avg_distance\n","    result_df = df[(df['distance'] >= lower_bound) & (df['distance'] <= upper_bound)]['id_start'].unique()\n","    return sorted(result_df)\n"],"metadata":{"id":"HCRs5vd6a_LX","executionInfo":{"status":"ok","timestamp":1702223434098,"user_tz":-330,"elapsed":4,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def calculate_toll_rate(df):\n","    rate_coefficients = {'moto': 0.8, 'car': 1.2, 'rv': 1.5, 'bus': 2.2, 'truck': 3.6}\n","\n","    # Create a new DataFrame with only the required columns\n","    result_df = df[['id_start', 'id_end']]\n","\n","    # Calculate toll rates for each vehicle and add columns to the result DataFrame\n","    for vehicle in rate_coefficients:\n","        result_df[vehicle] = df['distance'] * rate_coefficients[vehicle]\n","\n","    return result_df"],"metadata":{"id":"lzCqGKz9bEwn","executionInfo":{"status":"ok","timestamp":1702223466785,"user_tz":-330,"elapsed":7,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["        if day in ['Saturday', 'Sunday']:\n","  def get_discount_factor(hour, day):\n","            return 0.7\n","        elif 0 <= hour < 10 or 18 <= hour <= 23:\n","            return 0.8\n","        elif 10 <= hour < 18:\n","            return 1.2\n","        else:\n","            return 1.0"],"metadata":{"id":"JL4AiukJbMuV","executionInfo":{"status":"ok","timestamp":1702224114199,"user_tz":-330,"elapsed":473,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q8HiU_7TcnGn","executionInfo":{"status":"ok","timestamp":1702223906984,"user_tz":-330,"elapsed":29422,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}},"outputId":"96cec280-98e3-4ca2-9502-d9c776223f62"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df=pd.read_csv(\"/content/drive/MyDrive/Map up/datasets/dataset-3.csv\")\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"PgZsbn1ScaHk","executionInfo":{"status":"ok","timestamp":1702223911272,"user_tz":-330,"elapsed":15,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}},"outputId":"4e499589-d3c7-43af-9438-363abfbf7d13"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_start   id_end  distance\n","0   1001400  1001402       9.7\n","1   1001402  1001404      20.2\n","2   1001404  1001406      16.0\n","3   1001406  1001408      21.7\n","4   1001408  1001410      11.1"],"text/html":["\n","  <div id=\"df-2cfba6d9-a5ca-47df-bd56-a74809c6a291\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_start</th>\n","      <th>id_end</th>\n","      <th>distance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001400</td>\n","      <td>1001402</td>\n","      <td>9.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001402</td>\n","      <td>1001404</td>\n","      <td>20.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001404</td>\n","      <td>1001406</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001406</td>\n","      <td>1001408</td>\n","      <td>21.7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001408</td>\n","      <td>1001410</td>\n","      <td>11.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cfba6d9-a5ca-47df-bd56-a74809c6a291')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2cfba6d9-a5ca-47df-bd56-a74809c6a291 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2cfba6d9-a5ca-47df-bd56-a74809c6a291');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a2eedc7-fec4-40e0-86bd-1ccacc776f18\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a2eedc7-fec4-40e0-86bd-1ccacc776f18')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a2eedc7-fec4-40e0-86bd-1ccacc776f18 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":[" df['start_day'] = pd.to_datetime(df['id_start'].astype(str).str[:2], format='%d').dt.day_name()\n"," df['end_day'] = pd.to_datetime(df['id_end'].astype(str).str[:2], format='%d').dt.day_name()\n"," df['start_time'] = pd.to_datetime('2023-01-01 ' + df['id_start'].astype(str).str[2:], format='%Y-%m-%d %H%M%S').dt.time\n"," df['end_time'] = pd.to_datetime('2023-01-01 ' + df['id_end'].astype(str).str[2:], format='%Y-%m-%d %H%M%S').dt.time"],"metadata":{"id":"NRGtbtQ8bp3_","executionInfo":{"status":"ok","timestamp":1702223945102,"user_tz":-330,"elapsed":567,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["df['discount_factor'] = df.apply(lambda row: get_discount_factor(row['start_time'].hour, row['start_day']), axis=1)"],"metadata":{"id":"8pbPDGfkdDJr","executionInfo":{"status":"ok","timestamp":1702224712803,"user_tz":-330,"elapsed":467,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"iHYVfQyPdDMd","executionInfo":{"status":"ok","timestamp":1702224717463,"user_tz":-330,"elapsed":741,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}},"outputId":"03be0484-54ec-440c-dbf2-9a1d05d324ea"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_start   id_end  distance  start_day    end_day start_time  end_time  \\\n","0   1001400  1001402       9.7  Wednesday  Wednesday   01:40:00  01:40:02   \n","1   1001402  1001404      20.2  Wednesday  Wednesday   01:40:02  01:40:04   \n","2   1001404  1001406      16.0  Wednesday  Wednesday   01:40:04  01:40:06   \n","3   1001406  1001408      21.7  Wednesday  Wednesday   01:40:06  01:40:08   \n","4   1001408  1001410      11.1  Wednesday  Wednesday   01:40:08  01:41:00   \n","\n","   moto  car   rv  bus  truck  discount_factor  \n","0   0.8  0.8  0.8  0.8    0.8              0.8  \n","1   0.8  0.8  0.8  0.8    0.8              0.8  \n","2   0.8  0.8  0.8  0.8    0.8              0.8  \n","3   0.8  0.8  0.8  0.8    0.8              0.8  \n","4   0.8  0.8  0.8  0.8    0.8              0.8  "],"text/html":["\n","  <div id=\"df-e3597f50-54df-4367-bef5-62f3ccbf4cd3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_start</th>\n","      <th>id_end</th>\n","      <th>distance</th>\n","      <th>start_day</th>\n","      <th>end_day</th>\n","      <th>start_time</th>\n","      <th>end_time</th>\n","      <th>moto</th>\n","      <th>car</th>\n","      <th>rv</th>\n","      <th>bus</th>\n","      <th>truck</th>\n","      <th>discount_factor</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001400</td>\n","      <td>1001402</td>\n","      <td>9.7</td>\n","      <td>Wednesday</td>\n","      <td>Wednesday</td>\n","      <td>01:40:00</td>\n","      <td>01:40:02</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001402</td>\n","      <td>1001404</td>\n","      <td>20.2</td>\n","      <td>Wednesday</td>\n","      <td>Wednesday</td>\n","      <td>01:40:02</td>\n","      <td>01:40:04</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001404</td>\n","      <td>1001406</td>\n","      <td>16.0</td>\n","      <td>Wednesday</td>\n","      <td>Wednesday</td>\n","      <td>01:40:04</td>\n","      <td>01:40:06</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001406</td>\n","      <td>1001408</td>\n","      <td>21.7</td>\n","      <td>Wednesday</td>\n","      <td>Wednesday</td>\n","      <td>01:40:06</td>\n","      <td>01:40:08</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001408</td>\n","      <td>1001410</td>\n","      <td>11.1</td>\n","      <td>Wednesday</td>\n","      <td>Wednesday</td>\n","      <td>01:40:08</td>\n","      <td>01:41:00</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3597f50-54df-4367-bef5-62f3ccbf4cd3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3597f50-54df-4367-bef5-62f3ccbf4cd3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3597f50-54df-4367-bef5-62f3ccbf4cd3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-629c53fb-92d3-43c9-be4b-445173e8fe25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-629c53fb-92d3-43c9-be4b-445173e8fe25')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-629c53fb-92d3-43c9-be4b-445173e8fe25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":[],"metadata":{"id":"d2g0ecz6dDPP","executionInfo":{"status":"ok","timestamp":1702224753401,"user_tz":-330,"elapsed":1104,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fKrGNZlafJEB","executionInfo":{"status":"ok","timestamp":1702224511837,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["vehicles = ['moto', 'car', 'rv', 'bus', 'truck']\n","for vehicle in vehicles:\n"," df[vehicle] = df['discount_factor']\n"," df = df.drop(columns=['discount_factor'])\n"," return df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"eWqKi8rWdDRr","executionInfo":{"status":"error","timestamp":1702224998908,"user_tz":-330,"elapsed":796,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}},"outputId":"b35f1f01-7354-4e4d-c879-7589b141bc6c"},"execution_count":48,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-48-102ec0c54eca>\"\u001b[0;36m, line \u001b[0;32m5\u001b[0m\n\u001b[0;31m    return df\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m 'return' outside function\n"]}]},{"cell_type":"code","source":["distance_matrix = calculate_distance_matrix(df)\n","unrolled_df = unroll_distance_matrix(distance_matrix)\n","result_ids = find_ids_within_ten_percentage_threshold(unrolled_df, 1001402)\n","toll_rate_df = calculate_toll_rate(unrolled_df)\n","time_based_toll_df = calculate_time_based_toll_rates(toll_rate_df)"],"metadata":{"id":"u-dX2YmVdDUR","executionInfo":{"status":"ok","timestamp":1702224390044,"user_tz":-330,"elapsed":543,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["print(\"Distance Matrix:\")\n","print(distance_matrix)\n","print(\"\\nUnrolled Distance Matrix:\")\n","print(unrolled_df[['id_start', 'id_end', 'distance']])\n","print(\"\\nIDs within 10% Threshold of Reference Value 1001402:\")\n","print(result_ids)\n","print(\"\\nToll Rate DataFrame:\")\n","print(toll_rate_df[['id_start', 'id_end', 'moto', 'car', 'rv', 'bus', 'truck']])\n","print(\"\\nTime-Based Toll Rates DataFrame:\")\n","print(time_based_toll_df[['id_start', 'id_end', 'start_day', 'start_time', 'end_day', 'end_time', 'moto', 'car', 'rv', 'bus', 'truck']])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"OZJGTUpndDXS","executionInfo":{"status":"error","timestamp":1702225176714,"user_tz":-330,"elapsed":500,"user":{"displayName":"Ritik Bhargava","userId":"11888464310975560552"}},"outputId":"dd454a39-92fc-4233-84b4-ed451453fdbf"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Distance Matrix:\n","         1001400  1001402  1001404  1001406  1001408  1001410  1001412  \\\n","1001400      NaN      NaN      NaN      NaN      NaN      NaN      NaN   \n","1001402      NaN      0.0     20.2      0.0      0.0      0.0      0.0   \n","1001404      NaN     20.2      0.0     16.0      0.0      0.0      0.0   \n","1001406      NaN      0.0     16.0      0.0     21.7      0.0      0.0   \n","1001408      NaN      0.0      0.0     21.7      0.0     11.1      0.0   \n","1001410      NaN      0.0      0.0      0.0     11.1      0.0     15.6   \n","1001412      NaN      0.0      0.0      0.0      0.0     15.6      0.0   \n","1001414      NaN      0.0      0.0      0.0      0.0      0.0     18.2   \n","1001416      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001418      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001420      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001422      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001424      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001426      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001428      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001430      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001432      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001434      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001436      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001437      NaN      NaN      NaN      NaN      NaN      NaN      NaN   \n","1001438      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001440      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001442      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001444      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001446      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001448      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001450      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001452      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001454      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001456      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001458      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001460      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001461      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001462      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001464      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001466      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001468      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001470      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1001472      NaN      NaN      NaN      NaN      NaN      NaN      NaN   \n","1001488      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1004354      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1004355      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","1004356      NaN      0.0      0.0      0.0      0.0      0.0      0.0   \n","\n","         1001414  1001416  1001418  ...  1001462  1001464  1001466  1001468  \\\n","1001400      NaN      NaN      NaN  ...      NaN      NaN      NaN      NaN   \n","1001402      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001404      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001406      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001408      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001410      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001412     18.2      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001414      0.0     13.2      0.0  ...      0.0      0.0      0.0      0.0   \n","1001416     13.2      0.0     13.6  ...      0.0      0.0      0.0      0.0   \n","1001418      0.0     13.6      0.0  ...      0.0      0.0      0.0      0.0   \n","1001420      0.0      0.0     12.9  ...      0.0      0.0      0.0      0.0   \n","1001422      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001424      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001426      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001428      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001430      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001432      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001434      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001436      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001437      NaN      NaN      NaN  ...      NaN      NaN      NaN      NaN   \n","1001438      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001440      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001442      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001444      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001446      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001448      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001450      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001452      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001454      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001456      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001458      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1001460      0.0      0.0      0.0  ...     17.9      0.0      0.0      0.0   \n","1001461      0.0      0.0      0.0  ...      5.1      0.0      0.0      0.0   \n","1001462      0.0      0.0      0.0  ...      0.0     26.7      0.0      0.0   \n","1001464      0.0      0.0      0.0  ...     26.7      0.0      8.5      0.0   \n","1001466      0.0      0.0      0.0  ...      0.0      8.5      0.0     10.7   \n","1001468      0.0      0.0      0.0  ...      0.0      0.0     10.7      0.0   \n","1001470      0.0      0.0      0.0  ...      0.0      0.0      0.0     10.6   \n","1001472      NaN      NaN      NaN  ...      NaN      NaN      NaN      NaN   \n","1001488      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1004354      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1004355      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","1004356      0.0      0.0      0.0  ...      0.0      0.0      0.0      0.0   \n","\n","         1001470  1001472  1001488  1004354  1004355  1004356  \n","1001400      NaN      NaN      NaN      NaN      NaN      NaN  \n","1001402      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001404      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001406      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001408      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001410      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001412      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001414      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001416      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001418      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001420      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001422      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001424      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001426      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001428      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001430      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001432      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001434      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001436      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001437      NaN      NaN      NaN      NaN      NaN      NaN  \n","1001438      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001440      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001442      0.0      NaN      4.5      0.0      0.0      0.0  \n","1001444      0.0      NaN      0.0      0.0      0.7      0.0  \n","1001446      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001448      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001450      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001452      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001454      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001456      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001458      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001460      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001461      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001462      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001464      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001466      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001468     10.6      NaN      0.0      0.0      0.0      0.0  \n","1001470      0.0      NaN      0.0      0.0      0.0      0.0  \n","1001472      NaN      NaN      NaN      NaN      NaN      NaN  \n","1001488      0.0      NaN      0.0      0.0      0.0      4.0  \n","1004354      0.0      NaN      0.0      0.0      2.0      2.0  \n","1004355      0.0      NaN      0.0      2.0      0.0      0.0  \n","1004356      0.0      NaN      4.0      2.0      0.0      0.0  \n","\n","[43 rows x 43 columns]\n","\n","Unrolled Distance Matrix:\n","      id_start   id_end  distance\n","1      1001402  1001404      20.2\n","2      1001402  1001406       0.0\n","3      1001402  1001408       0.0\n","4      1001402  1001410       0.0\n","5      1001402  1001412       0.0\n","...        ...      ...       ...\n","1594   1004356  1001468       0.0\n","1595   1004356  1001470       0.0\n","1596   1004356  1001488       4.0\n","1597   1004356  1004354       2.0\n","1598   1004356  1004355       0.0\n","\n","[1560 rows x 3 columns]\n","\n","IDs within 10% Threshold of Reference Value 1001402:\n","[]\n","\n","Toll Rate DataFrame:\n","      id_start   id_end   moto    car    rv    bus  truck\n","1      1001402  1001404  16.16  24.24  30.3  44.44  72.72\n","2      1001402  1001406   0.00   0.00   0.0   0.00   0.00\n","3      1001402  1001408   0.00   0.00   0.0   0.00   0.00\n","4      1001402  1001410   0.00   0.00   0.0   0.00   0.00\n","5      1001402  1001412   0.00   0.00   0.0   0.00   0.00\n","...        ...      ...    ...    ...   ...    ...    ...\n","1594   1004356  1001468   0.00   0.00   0.0   0.00   0.00\n","1595   1004356  1001470   0.00   0.00   0.0   0.00   0.00\n","1596   1004356  1001488   3.20   4.80   6.0   8.80  14.40\n","1597   1004356  1004354   1.60   2.40   3.0   4.40   7.20\n","1598   1004356  1004355   0.00   0.00   0.0   0.00   0.00\n","\n","[1560 rows x 7 columns]\n","\n","Time-Based Toll Rates DataFrame:\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-50-dbde0b8fee03>\u001b[0m in \u001b[0;36m<cell line: 10>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtoll_rate_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'id_start'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'id_end'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'moto'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'car'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'bus'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'truck'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\nTime-Based Toll Rates DataFrame:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtime_based_toll_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'id_start'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'id_end'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'start_day'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'start_time'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'end_day'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'end_time'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'moto'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'car'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'bus'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'truck'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'NoneType' object is not subscriptable"]}]},{"cell_type":"code","source":[],"metadata":{"id":"A-VxMydSdDZe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FD4o3qgTdDc3"},"execution_count":null,"outputs":[]}]}